name: Deploy (Dev)

on:
  workflow_dispatch:
  push:
    branches:    
      - dev

jobs:
  transform:
    runs-on: ubuntu-latest
    container: 
      image: bytesmith/dbt-bigquery:latest
      env:
        DBT_TARGET: dev
        DBT_PROJECT_DIR: ./wide_world_importers_dw
        DBT_ENV_SECRET_DEV_PROJECT_ID: ${{ secrets.DBT_ENV_SECRET_DEV_PROJECT_ID }}
        DBT_ENV_SECRET_DEV_KEYFILE_PRIVATE_KEY_ID: ${{ secrets.DBT_ENV_SECRET_DEV_KEYFILE_PRIVATE_KEY_ID }}
        DBT_ENV_SECRET_DEV_KEYFILE_PRIVATE_KEY: ${{ secrets.DBT_ENV_SECRET_DEV_KEYFILE_PRIVATE_KEY }}
        DBT_ENV_SECRET_DEV_KEYFILE_CLIENT_EMAIL: ${{ secrets.DBT_ENV_SECRET_DEV_KEYFILE_CLIENT_EMAIL }}
        DBT_ENV_SECRET_DEV_KEYFILE_CLIENT_ID: ${{ secrets.DBT_ENV_SECRET_DEV_KEYFILE_CLIENT_ID }}
        DBT_ENV_SECRET_DEV_KEYFILE_CLIENT_X509_CERT_URL: ${{ secrets.DBT_ENV_SECRET_DEV_KEYFILE_CLIENT_X509_CERT_URL }}
      volumes:
        - ${{ github.workspace }}/wide_world_importers_dw:/usr/app
        - ${{ github.workspace }}/dbt:/root/.dbt/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Resolve Dependencies
        run: dbt deps --project-dir=$DBT_PROJECT_DIR --profiles-dir=./dbt --target=$DBT_TARGET
      - name: Check Source Freshness
        run: dbt source freshness --project-dir=$DBT_PROJECT_DIR --profiles-dir=./dbt --target=$DBT_TARGET
      - name: Run Source Tests
        run: dbt test --select source:* --project-dir=$DBT_PROJECT_DIR --profiles-dir=./dbt --target=$DBT_TARGET
      - name: Add Seeds
        run: dbt seed --project-dir=$DBT_PROJECT_DIR --profiles-dir=./dbt --target=$DBT_TARGET
      - name: Run Transformations
        run: dbt run --project-dir=$DBT_PROJECT_DIR --profiles-dir=./dbt --target=$DBT_TARGET
      - name: Run Tests
        run: dbt test --exclude source:* --project-dir=$DBT_PROJECT_DIR --profiles-dir=./dbt --target=$DBT_TARGET
      - name: Generate Docs
        run: dbt docs generate --project-dir=$DBT_PROJECT_DIR --profiles-dir=./dbt --target=$DBT_TARGET
      - name: Upload Artifacts (Docs)
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: wide_world_importers_dw/target
  test:
    runs-on: ubuntu-latest
    needs: transform
    container: 
      image: bytesmith/great-expectations:latest
      env:
        bigquery_connection_string: "${{ secrets.GE_BIGQUERY_CONNECTION_STRING }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Initialize Great Expectations
        run: |
          mkdir -p great_expectations/uncommitted/data_docs
          mkdir -p great_expectations/uncommitted/validations
          echo "instance_id: b47db2a7-e628-4a5d-a48d-8b167467fddc" > great_expectations/uncommitted/config_variables.yml
      - name: Run Checkpoint
        run: great_expectations checkpoint run wide_world_importers_dw_checkpoint
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ge
          path: great_expectations/uncommitted
